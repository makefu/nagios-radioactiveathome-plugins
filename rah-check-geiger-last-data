#!/usr/bin/env python
""" RadioactiveAtHome Check last Geiger Data Nagios Plugin

usage: rah-check-geiger-last-data [options]

Options:
    -w --warning <hours>            Warning threshold for hours since last data entry [default: 24]
    -c --critical <hours>           Warning threshold for hours since last data entry [default: 72]
    -h --hostid <id>                Host Identity in radioactiveathome [default: 14364]
    -u --url <URL>                  radioactivehome trickledata [default: http://radioactiveathome.org/boinc/gettrickledata.php]

"""


from docopt import docopt
import requests,csv,sys
from datetime import datetime,timedelta

if __name__ == "__main__":
    args = docopt(__doc__)
    warn = timedelta(hours=int(args['--warning']))
    crit = timedelta(hours=int(args['--critical']))
    hostid = args['--hostid']
    url = args['--url']
    payload = {'hostid':hostid}
    try:
        ret = requests.get(url,params=payload)
        current_data_field = int(ret.text.split('\n')[0].split(':')[1])
        payload['start'] =current_data_field -1
        current_data = requests.get(url,params=payload).text.split('\n')[-2].split(',')
    except:
        print("radiation UNKNOWN - cannot retrieve data from {}".format(url))
        sys.exit(3)
    try:

        timeout = datetime.now() - datetime.strptime(current_data[3],"%Y-%m-%d %H:%M:%S")
        if timeout > crit:
            print("radiation timeout CRITICAL - no data since {0:.2f} hours;radiation_timeout={1:.0f}s;{2:.0f};{3:.0f};;".format((timeout.seconds /60) / 60,timeout.seconds,warn.total_seconds(),crit.total_seconds() ))
            sys.exit(2)
        elif timeout > warn:
            print("radiation timeout WARNING - no data since {0:.2f} hours;radiation_timeout={1:.0f}s;{2:.0f};{3:.0f};;".format((timeout.seconds /60) / 60,timeout.seconds,warn.total_seconds(),crit.total_seconds() ))
            sys.exit(1)
        else:
            print("radiation timeout OK - last data {0:.0f} minutes ago;radiation_timeout={1}s;{2:.0f};{3:.0f};;".format((timeout.seconds /60),
                        timeout.seconds, warn.total_seconds(),crit.total_seconds() ))
            sys.exit(0)
    except Exception as e:
        print("radiation UNKNOWN - cannot calculate data from input - {}".format(e))
        sys.exit(3)
